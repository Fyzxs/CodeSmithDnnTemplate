<%-- 
Name: Localized.js.cst
Author: Quinn Gil
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="JS" src="../MasterCodeBehind.cs" %>

<%-- 01) Module --%>
<%@ Property Name="ModuleName" Type="System.String" Optional="False" Category="01) Module" Description="The Name of the Module" %>
<%@ Property Name="CodeSafeModuleName" Type="System.String" Optional="False" Category="01) Module" Description="A version of the module name that is safe to use in code, Alpha Only is safest." %>

<%-- 01.1) Module Controls --%>
<%@ Property Name="HasSettingControl" Type="System.Boolean" Optional="True" Default="True" Category="01.1) Module Controls" Description="Will include the Settings.ascx files." %>
<%@ Property Name="AdditionalControls" Type="System.String" Optional="True" Category="01.1) Module Controls" Description="Semi-Colon seperated list of the Names {no whitespace} of the controls. eg - Edit;AddNew;AdminEdit" %>

<%-- 01.2) Module Permissions --%>
<%@ Property Name="HasDnnExtendPermissions" Type="System.Boolean" Optional="True" Default="False" Category="01.2) Module Permissions" Description="DNN Profession+ and Oliver Hine's Extended Persmission have these active." %>
<%@ Property Name="AdditionalPermissions" Type="System.String" Optional="True" Category="01.2) Module Permissions" Description="Semi-Colon seperated list of the Names {no whitespace} of the Permissions. eg - AddNew;AdminEdit" %>

<%-- 02) DotNetNuke --%>
<%@ Property Name="OwnerFolder" Type="System.String" Optional="False" Category="02) DotNetNuke" Description="Folder under DesktopModules to place the module folder. (eg - {CompanyName})" %>

<%-- 04) Localization --%>
<%@ Property Name="Culture" Type="System.String" Optional="True" Category="04) Localization" Description="The culture for the file." %>

<%--Begin File Generation Code --%>
(function ($) {
    //Module
    <%= OwnerFolder %>.extend(<%= OwnerFolder %>.<%= CodeSafeModuleName %>, { Localized: {
        ModuleName: "<% if(!String.IsNullOrEmpty(Culture)) { %>{<%= Culture %>}<% } %><%= ModuleName %>",
    
    //Controls
    <% if(HasSettingControl) { %>Settings: {
        ControlName: "<% if(!String.IsNullOrEmpty(Culture)) { %>{<%= Culture %>}<% } %>Control Name is Settings",
        Settings: "<% if(!String.IsNullOrEmpty(Culture)) { %> {<%= Culture %>}<% } %>Settings"
    },
    <% } %>
    <% foreach(string s in (AdditionalControls + ";" + MasterCodeBehind.ViewControl).Split(new string[]{";"}, StringSplitOptions.RemoveEmptyEntries)) { %>
    <%= s %>: {
        ControlName: "<% if(!String.IsNullOrEmpty(Culture)) { %>{<%= Culture %>}<% } %>Control Name is <%= Utils.SplitCamelCase(s) %>",
        <%= s %>: "<% if(!String.IsNullOrEmpty(Culture)) { %>{<%= Culture %>}<% } %><%= Utils.SplitCamelCase(s) %>"
    },<% } %>
    
    //Permissions<% foreach(string s in (AdditionalPermissions + ";" +  MasterCodeBehind.DefaultPermissions + (HasDnnExtendPermissions ? MasterCodeBehind.ExtendedPermissions : String.Empty)).Split(new string[]{";"}, StringSplitOptions.RemoveEmptyEntries)) { %>
    <%= s %>: {
        PermissionName: "<% if(!String.IsNullOrEmpty(Culture)) { %>{<%= Culture %>}<% } %>Permission Name is <%= Utils.SplitCamelCase(s) %>",
        <%= s %>: "<% if(!String.IsNullOrEmpty(Culture)) { %>{<%= Culture %>}<% } %><%= Utils.SplitCamelCase(s) %>"
    },<% } %>
    
    Misc: {        }
    }});
})(jQuery);